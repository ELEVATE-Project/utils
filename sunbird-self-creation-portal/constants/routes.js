module.exports = {
	routes: [
		{
			sourceRoute: '/scp/v1/permissions/list',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/permissions/list',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/config/list',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/config/list',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/form/create',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/form/create',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/form/read',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/form/read',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/form/read/:id',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/form/read/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/form/update',
			type: 'PUT',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/form/update',
				type: 'PUT',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/form/update/:id',
			type: 'PUT',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/form/update/:id',
				type: 'PUT',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/entity-types/create',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/entity-types/create',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/entity-types/read',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/entity-types/read',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/entity-types/update',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/entity-types/update',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/organization-extensions/updateConfig/:id',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/organization-extensions/updateConfig/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/organization-extensions/createConfig',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/organization-extensions/createConfig',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/entity-types/update/:id',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/entity-types/update/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/entity-types/delete',
			type: 'DELETE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/entity-types/delete',
				type: 'DELETE',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/entity-types/delete/:id',
			type: 'DELETE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/entity-types/delete/:id',
				type: 'DELETE',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/entities/create',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/entities/create',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/entities/read',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/entities/read',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/entities/read/:id',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/entities/read/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/entities/update',
			type: 'PUT',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/entities/update',
				type: 'PUT',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/entities/update/:id',
			type: 'PUT',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/entities/update/:id',
				type: 'PUT',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/entities/delete',
			type: 'DELETE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/entities/delete',
				type: 'DELETE',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/entities/delete/:id',
			type: 'DELETE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/entities/delete/:id',
				type: 'DELETE',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/projects/details/',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/projects/details/',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/projects/details/:id',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/projects/details/:id',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/cloud-services/file/fetchJsonFromCloud',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/cloud-services/file/fetchJsonFromCloud',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/projects/reviewerList',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/projects/reviewerList',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/programs/reviewerList',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/programs/reviewerList',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/projects/update',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/projects/update',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/projects/update/:id',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/projects/update/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/projects/update/:id',
			type: 'DELETE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/projects/update/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/permissions/create',
			type: 'POST',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/permissions/create',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/permissions/update/:id',
			type: 'POST',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/permissions/update/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/permissions/getPermissions',
			type: 'GET',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/permissions/getPermissions',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/permissions/delete/:id',
			type: 'DELETE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/permissions/delete/:id',
				type: 'DELETE',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/modules/create',
			type: 'POST',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/modules/create',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/modules/update/:id',
			type: 'POST',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/modules/update/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/modules/list',
			type: 'GET',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/modules/list',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/modules/delete/:id',
			type: 'DELETE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/modules/delete/:id',
				type: 'DELETE',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/certificates/list',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/certificates/list',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/certificates/update',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/certificates/update',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/certificates/update/:id',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/certificates/update/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/resource/list',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/resource/list',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/resource/upForReview',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/resource/upForReview',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/role-permission-mapping/delete/:role_id',
			type: 'POST',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/role-permission-mapping/delete/:role_id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/role-permission-mapping/create/:role_id',
			type: 'POST',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/role-permission-mapping/create/:role_id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/role-permission-mapping/list',
			type: 'POST',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/role-permission-mapping/list',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/projects/submitForReview/',
			type: 'POST',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/projects/submitForReview/',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/projects/submitForReview/:resource_id',
			type: 'POST',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/projects/submitForReview/:resource_id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/comments/list',
			type: 'GET',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/comments/list',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/comments/update',
			type: 'POST',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/comments/update',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/comments/update/:id',
			type: 'POST',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/comments/update/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/comments/update/:id',
			type: 'DELETE',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/comments/update/:id',
				type: 'DELETE',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/reviews/update/:id',
			type: 'POST',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/reviews/update/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/reviews/start/:id',
			type: 'POST',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/reviews/start/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/reviews/approve/:id',
			type: 'POST',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/reviews/approve/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/reviews/rejectOrReport/:id',
			type: 'POST',
			priority: 'MUST_HAVE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/reviews/rejectOrReport/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/cloud-services/file/getSignedUrl',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/cloud-services/file/getSignedUrl',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/cloud-services/file/getDownloadableUrl',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/cloud-services/file/getDownloadableUrl',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/resource/getPublishedResources',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/resource/getPublishedResources',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/rollouts/getDataManagers',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/rollouts/getDataManagers',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/rollouts/update',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/rollouts/update',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/rollouts/update/:id',
			type: 'DELETE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/rollouts/update/:id',
				type: 'DELETE',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/rollouts/list',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/rollouts/list',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/rollouts/details/:id',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/rollouts/details/:id',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/rollouts/publish/:id',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/rollouts/publish/:id',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/resource/publishCallback',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/resource/publishCallback',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/programs/update',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/programs/update',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/programs/update/:id',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/programs/update/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/programs/update/:id',
			type: 'DELETE',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/programs/update/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/programs/addResources/:id',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/programs/addResources/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/programs/removeResources/:id',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/programs/removeResources/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/programs/details/:id',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/programs/details/:id',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/programs/submitForReview/:id',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/programs/submitForReview/:id',
				type: 'POST',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/programs/getProgramManagers',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/programs/getProgramManagers',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/scp/v1/programs/publish/:id',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/scp/v1/programs/publish/:id',
				type: 'GET',
			},
			service: 'scp',
		},
		{
			sourceRoute: '/project/v1/cloud-services/files/download',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/project/v1/cloud-services/files/download',
				type: 'GET',
			},
			service: 'project',
		},
		{
			sourceRoute: '/project/v1/cloud-services/files/preSignedUrls',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/project/v1/cloud-services/files/preSignedUrls',
				type: 'POST',
			},
			service: 'project',
		},
		{
			sourceRoute: '/project/v1/cloud-services/files/getDownloadableUrl',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/project/v1/cloud-services/files/getDownloadableUrl',
				type: 'POST',
			},
			service: 'project',
		},
		{
			sourceRoute: '/project/v1/project/templates/details',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/project/v1/project/templates/details',
				type: 'GET',
			},
			service: 'project',
		},
		{
			sourceRoute: '/project/v1/project/templates/details/:id',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/project/v1/project/templates/details/:id',
				type: 'GET',
			},
			service: 'project',
		},

		{
			sourceRoute: '/project/v1/admin/dbFind',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/project/v1/admin/dbFind',
				type: 'POST',
			},
			service: 'project',
		},
		{
			sourceRoute: '/project/v1/admin/dbFind/:id',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/project/v1/admin/dbFind/:id',
				type: 'POST',
			},
			service: 'project',
		},
		{
			sourceRoute: '/project/v1/scp/publishTemplateAndTasks',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/project/v1/scp/publishTemplateAndTasks',
				type: 'POST',
			},
			service: 'project',
		},
		{
			sourceRoute: '/notification/v1/email/send',
			type: 'POST',
			targetRoute: {
				path: '/notification/v1/email/send',
				type: 'POST',
			},
			service: 'notification',
		},
		{
			sourceRoute: '/scheduler/jobs/create',
			type: 'POST',
			targetRoute: {
				path: '/scheduler/jobs/create',
				type: 'POST',
			},
			service: 'scheduler',
		},
		{
			sourceRoute: '/scheduler/jobs/updateDelay',
			type: 'POST',
			targetRoute: {
				path: '/scheduler/jobs/updateDelay',
				type: 'POST',
			},
			service: 'scheduler',
		},
		{
			sourceRoute: '/scheduler/jobs/remove',
			type: 'POST',
			targetRoute: {
				path: '/scheduler/jobs/remove',
				type: 'POST',
			},
			service: 'scheduler',
		},
		{
			sourceRoute: '/scheduler/jobs/list',
			type: 'GET',
			targetRoute: {
				path: '/scheduler/jobs/list',
				type: 'GET',
			},
			service: 'scheduler',
		},
		{
			sourceRoute: '/scheduler/jobs/purge',
			type: 'POST',
			targetRoute: {
				path: '/scheduler/jobs/purge',
				type: 'POST',
			},
			service: 'scheduler',
		},
		{
			sourceRoute: '/user/v1/user/read',
			type: 'GET',
			inSequence: false,
			orchestrated: true,
			targetRoute: {
				path: '/api/user/v2/read',
				type: 'GET',
				functionName: 'profileRead',
			},
			service: 'user',
		},
		{
			sourceRoute: '/user/v1/user/read/:id',
			type: 'GET',
			inSequence: false,
			orchestrated: true,
			targetRoute: {
				path: '/api/user/v5/read/:id',
				type: 'GET',
				functionName: 'profileRead',
			},
			service: 'user',
		},
		{
			sourceRoute: '/entity-management/v1/entities/entityListBasedOnEntityType/:id',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/data/v1/location/search',
				type: 'GET',
				functionName: 'entityListBasedOnEntityType',
			},
			service: 'entity',
		},
		{
			sourceRoute: '/entity-management/v1/entities/entityListBasedOnEntityType',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/data/v1/location/search',
				type: 'GET',
				functionName: 'entityListBasedOnEntityType',
			},
			service: 'entity',
		},
		{
			sourceRoute: '/entity-management/v1/entities/subEntityListBasedOnRoleAndLocation/:id',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/kendra/entities/mlcore/v1/subEntityList',
				type: 'GET',
				functionName: 'subEntityListBasedOnRoleAndLocation',
			},
			service: 'entity',
		},
		{
			sourceRoute: '/entity-management/v1/entities/find',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/data/v1/location/search',
				type: 'POST',
				functionName: 'getLocationDetails',
			},
			service: 'entity',
		},
		{
			sourceRoute: '/entity-management/v1/entityTypes/find',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/entity-management/v1/entityTypes/find',
				type: 'POST',
			},
			service: 'entity',
		},
		{
			sourceRoute: '/user/v1/organization/read',
			type: 'GET',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/api/org/v1/read',
				type: 'POST',
				functionName: 'readOrganization',
			},
			service: 'user',
		},
		{
			sourceRoute: '/user/v1/account/search',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/api/user/v1/search',
				type: 'POST',
				functionName: 'accountList',
			},
			service: 'user',
		},
		{
			sourceRoute: '/user/v1/organization/list',
			type: 'POST',
			inSequence: false,
			orchestrated: false,
			targetRoute: {
				path: '/api/org/v1/search',
				type: 'POST',
				functionName: 'organizationList',
			},
			service: 'user',
		},
	],
}
